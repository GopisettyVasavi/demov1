server.port=8090
#server.servlet.context-path=/ProfileParser
server.tomcat.additional-tld-skip-patterns=*.jar
spring.servlet.multipart.max-file-size=128MB
spring.servlet.multipart.max-request-size=128MB
spring.servlet.multipart.enabled=true
##Idle time set to 30 mins
server.servlet.session.timeout=1800
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

#Property for Job Scheduler Query
max-assigned-days=28

## PostgreSQL
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/parser
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#To see hibernate queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true



#server.error.whitelabel.enabled=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration


logging.level.org.springframework=ERROR
logging.level.com.renaissance=INFO
logging.level.java.lang=ERROR
logging.config=classpath:logback-spring.xml
# output to a file
#logging.level.org.springframework = debug
#logging.level.com.profile.parser=  trace

# To store logs to external file
# Here use strictly forward "/" slash for both Windows, Linux or any other os, otherwise, your logs it won't work.      
#logging.file=D:/javaSamples/spring-boot-hibernate-thymeleaf_new/spring-boot-hibernate-thymeleaf/profileparser1.log

# To customize logging pattern.
#logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#logging.file=profileparser.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log
#logging.pattern.file=%d %p %c{1.} [%t] %m%n

#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

spring.profiles.active=prod
